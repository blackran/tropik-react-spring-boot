{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/myprojects/tropik/frontend/src/Components/Clients/AlertConfirmationReservation.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\n\nclass AlertDialogSlideR extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCloseReserver() {\n    this.props.addReglement(this.props.dataReserver[0]);\n    this.props.addReservation(this.props.dataReserver[1]);\n    const stock = [{\n      'NumReservation': this.props.dataReserver[1].NumReservation,\n      'NomChambre': this.props.NomChambre\n    }];\n    this.props.addConcerner(stock);\n    this.handleClose();\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleClickOpen.bind(this),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Reserver\"), React.createElement(Dialog, {\n      open: this.state.open // TransitionComponent={Transition}\n      ,\n      keepMounted: true,\n      onClose: this.handleClose.bind(this),\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      style: {\n        minWidth: 80\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Affirmation\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Acceptez vous cette reservation?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Nom du chambre: \", this.props.NomChambre, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Date debut: \", this.props.dataReserver[1].DateDebutReservation, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Date fin: \", this.props.dataReserver[1].DateDebutReservation, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.props.dataReserver[1].ConditionReservation !== '' ? 'Condition: ' : null, \" \", this.props.dataReserver[1].ConditionReservation)), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.props.dataThis.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseReserver.bind(this),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Valider\")), React.createElement(Button, {\n      onClick: this.handleClose.bind(this),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Refuser\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    clients: state.clients,\n    chambres: state.chambres\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addClients: () => {\n      dispatch({\n        type: \"ADD_CLIENTS\"\n      });\n    },\n    onChangeClient: data => {\n      dispatch({\n        type: \"ON_CHANGE_CLIENT\",\n        data\n      });\n    },\n    updateNameClient: data => {\n      dispatch({\n        type: \"UPDATE_NAME_CLIENT\",\n        data\n      });\n    },\n    addReservation: data => {\n      dispatch({\n        type: \"ADD_RESERVER\",\n        data\n      });\n    },\n    addReglement: data => {\n      dispatch({\n        type: \"ADD_REGLEMENTS\",\n        data\n      });\n    },\n    addConcerner: data => {\n      dispatch({\n        type: \"ADD_CONCERNER\",\n        data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialogSlideR);","map":{"version":3,"sources":["/opt/lampp/htdocs/myprojects/tropik/frontend/src/Components/Clients/AlertConfirmationReservation.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","connect","AlertDialogSlideR","Component","constructor","props","state","open","handleClickOpen","setState","handleClose","handleCloseReserver","addReglement","dataReserver","addReservation","stock","NumReservation","NomChambre","addConcerner","render","bind","minWidth","DateDebutReservation","ConditionReservation","dataThis","mapStateToProps","clients","chambres","mapDispatchToProps","dispatch","addClients","type","onChangeClient","data","updateNameClient"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {connect} from 'react-redux';\n\n\nclass AlertDialogSlideR extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      open: false\n    }\n  }\n\n  handleClickOpen() {\n    this.setState({\n      open: true\n    })\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    })\n  }\n  \n  handleCloseReserver() {\n    this.props.addReglement(this.props.dataReserver[0]);\n    this.props.addReservation(this.props.dataReserver[1]);\n    const stock = [\n      {\n        'NumReservation': this.props.dataReserver[1].NumReservation,\n        'NomChambre': this.props.NomChambre\n      }\n    ]\n    this.props.addConcerner(stock)\n    this.handleClose();\n    \n  }\n  render(){\n    return(<span>\n      <Button variant=\"contained\" onClick={this.handleClickOpen.bind(this)} color=\"primary\">\n        Reserver\n      </Button>\n      <Dialog\n        open={this.state.open}\n        // TransitionComponent={Transition}\n        keepMounted\n        onClose={this.handleClose.bind(this)}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        style={{minWidth: 80}}\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Affirmation\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Acceptez vous cette reservation?<br/>\n            Nom du chambre: {this.props.NomChambre}<br/>\n            Date debut: {this.props.dataReserver[1].DateDebutReservation}<br/>\n            Date fin: {this.props.dataReserver[1].DateDebutReservation}<br/>\n            {this.props.dataReserver[1].ConditionReservation!==''?'Condition: ':null} {this.props.dataReserver[1].ConditionReservation}\n            {/* Total: {this.props.dataReserver[0].MontantReglement} Ar */}\n\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <span onClick={this.props.dataThis.bind(this)}>\n            <Button onClick={this.handleCloseReserver.bind(this)} color=\"primary\">\n              Valider\n            </Button>\n          </span>\n          <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n            Refuser\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </span>)\n    }\n  }\n\n\n  const mapStateToProps = state => {\n  \treturn {clients: state.clients, chambres: state.chambres}\n  }\n\n  const mapDispatchToProps = dispatch => {\n  \treturn {\n      addClients: () => {\n        dispatch({type: \"ADD_CLIENTS\"});\n      },\n      onChangeClient: (data) => {\n        dispatch({type: \"ON_CHANGE_CLIENT\", data});\n      },\n      updateNameClient: (data) => {\n        dispatch({type: \"UPDATE_NAME_CLIENT\", data});\n      },\n      addReservation: (data) => {\n        dispatch({type: \"ADD_RESERVER\", data});\n      },\n      addReglement: (data) => {\n        dispatch({type: \"ADD_REGLEMENTS\", data});\n      },\n      addConcerner: (data) => {\n        dispatch({type: \"ADD_CONCERNER\", data});\n      },\n  \t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialogSlideR);\n"]},"metadata":{},"sourceType":"module"}
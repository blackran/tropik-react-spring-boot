{"ast":null,"code":"import { ADD_TABLE_RESERVATIONS, DELETE_TABLE_RESERVATIONS, UPDATE_TABLE_RESERVATIONS, FETCH_TABLE_RESERVATIONS } from '../actions/typesTableReservations';\nimport axios from 'axios';\nconst initState = {\n  columns: [{\n    title: 'Num',\n    field: 'NumReservation'\n  }, {\n    title: 'Debut',\n    field: 'DateDebutReservation'\n  }, {\n    title: 'Fin',\n    field: 'DateFinReservation'\n  }, {\n    title: 'Jour',\n    field: 'NbJourReservation'\n  }, {\n    title: 'Condition',\n    field: 'ConditionReservation'\n  }, {\n    title: 'Client',\n    field: 'NumClient'\n  }, {\n    title: 'Reglement',\n    field: 'NumReglement'\n  }],\n  data: [// {\n    //   \"NumReservation\":\"1\",\n    //   \"DateDebutReservation\":\"2019-01-02\",\n    //   \"DateFinReservation\":\"2019-01-03\",\n    //   \"NbJourReservation\":\"1\",\n    //   \"ConditionReservation\":\"Diner et dejener\",\n    //   \"NumClient\":\"1\",\n    //   \"NumReglement\":null\n    // }\n  ]\n};\n\nconst TableReservationsReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TABLE_RESERVATIONS:\n      state.data = [...state.data, action.data];\n      var stockAdd = action.data;\n      var dataAdd = [{\n        NumReservation: parseInt(stockAdd.NumReservation),\n        DateDebutReservation: stockAdd.DateDebutReservation,\n        DateFinReservation: stockAdd.DateFinReservation,\n        NbJourReservation: parseInt(stockAdd.NbJourReservation),\n        ConditionReservation: stockAdd.ConditionReservation,\n        NumClient: stockAdd.NumClient,\n        NumReglement: stockAdd.NumReglement\n      }];\n      console.log(dataAdd);\n      axios.post(\"http://localhost/myprojects/tropik/backend/Reservation/post\", dataAdd, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.data);\n\n    case DELETE_TABLE_RESERVATIONS:\n      const mocks1 = [...state.data];\n      mocks1.splice(mocks1.indexOf(action.oldData), 1);\n      state.data = [...mocks1];\n      axios.delete(\"http://localhost/myprojects/tropik/backend/Reservation/delete/\" + action.oldData.NumReservation, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(res => res.data).then(state => this.props.fetchTableReservation(state)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.data);\n\n    case UPDATE_TABLE_RESERVATIONS:\n      const mocks2 = [...state.data];\n      mocks2[mocks2.indexOf(action.oldData)] = action.newData;\n      state.data = [...mocks2];\n      var stock = action.newData;\n      var data = [{\n        NumReservation: stock.NumReservation,\n        DateDebutReservation: stock.DateDebutReservation,\n        DateFinReservation: stock.DateFinReservation,\n        NbJourReservation: stock.NbJourReservation,\n        ConditionReservation: stock.ConditionReservation,\n        NumClient: stock.NumClient,\n        NumReglement: stock.NumReglement\n      }];\n      console.log(data);\n      axios.post(\"http://localhost/myprojects/tropik/backend/Reservation/put/\" + action.oldData.NumReservation, data, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.data);\n\n    case FETCH_TABLE_RESERVATIONS:\n      state.data = [];\n      state.data = action.data;\n      const date = new Date();\n      const years = date.getFullYear();\n      const mounth = (parseInt(date.getMonth()) < 10 ? '0' : '') + date.getMonth();\n      const days = (parseInt(date.getDate()) < 10 ? '0' : '') + date.getDate();\n      state.dateNow = years + \"-\" + mounth + \"-\" + days;\n      return Object.assign({}, state, state.dataChambres);\n\n    default:\n      return state;\n  }\n};\n\nexport default TableReservationsReducers;","map":{"version":3,"sources":["/opt/lampp/htdocs/myprojects/tropik/frontend/src/reducers/TableReservationsReducers.jsx"],"names":["ADD_TABLE_RESERVATIONS","DELETE_TABLE_RESERVATIONS","UPDATE_TABLE_RESERVATIONS","FETCH_TABLE_RESERVATIONS","axios","initState","columns","title","field","data","TableReservationsReducers","state","action","type","stockAdd","dataAdd","NumReservation","parseInt","DateDebutReservation","DateFinReservation","NbJourReservation","ConditionReservation","NumClient","NumReglement","console","log","post","headers","then","h","catch","err","Object","assign","mocks1","splice","indexOf","oldData","delete","res","props","fetchTableReservation","mocks2","newData","stock","date","Date","years","getFullYear","mounth","getMonth","days","getDate","dateNow","dataChambres"],"mappings":"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","sourcesContent":["import {ADD_TABLE_RESERVATIONS, DELETE_TABLE_RESERVATIONS, UPDATE_TABLE_RESERVATIONS, FETCH_TABLE_RESERVATIONS} from '../actions/typesTableReservations';\nimport axios from 'axios';\n\nconst initState = {\n  columns: [\n    {\n      title: 'Num',\n      field: 'NumReservation'\n    }, {\n      title: 'Debut',\n      field: 'DateDebutReservation'\n    }, {\n      title: 'Fin',\n      field: 'DateFinReservation'\n    }, {\n      title: 'Jour',\n      field: 'NbJourReservation'\n    }, {\n      title: 'Condition',\n      field: 'ConditionReservation'\n    }, {\n      title: 'Client',\n      field: 'NumClient'\n    }, {\n      title: 'Reglement',\n      field: 'NumReglement'\n    }\n  ],\n\n  data: [\n    // {\n    //   \"NumReservation\":\"1\",\n    //   \"DateDebutReservation\":\"2019-01-02\",\n    //   \"DateFinReservation\":\"2019-01-03\",\n    //   \"NbJourReservation\":\"1\",\n    //   \"ConditionReservation\":\"Diner et dejener\",\n    //   \"NumClient\":\"1\",\n    //   \"NumReglement\":null\n    // }\n  ]\n}\n\nconst TableReservationsReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TABLE_RESERVATIONS:\n      state.data = [\n        ...state.data,\n        action.data\n      ]\n\n      var stockAdd = action.data;\n\n      var dataAdd = [\n        {\n          NumReservation: parseInt(stockAdd.NumReservation),\n          DateDebutReservation: stockAdd.DateDebutReservation,\n          DateFinReservation: stockAdd.DateFinReservation,\n          NbJourReservation: parseInt(stockAdd.NbJourReservation),\n          ConditionReservation: stockAdd.ConditionReservation,\n          NumClient: stockAdd.NumClient,\n          NumReglement: stockAdd.NumReglement\n        }\n      ]\n      console.log(dataAdd);\n      axios.post(\"http://localhost/myprojects/tropik/backend/Reservation/post\", dataAdd, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.data);\n\n    case DELETE_TABLE_RESERVATIONS:\n      const mocks1 = [...state.data];\n      mocks1.splice(mocks1.indexOf(action.oldData), 1);\n      state.data = [...mocks1];\n      axios.delete(\"http://localhost/myprojects/tropik/backend/Reservation/delete/\" + action.oldData.NumReservation, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(res => res.data).then(state => this.props.fetchTableReservation(state)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.data);\n\n    case UPDATE_TABLE_RESERVATIONS:\n      const mocks2 = [...state.data];\n      mocks2[mocks2.indexOf(action.oldData)] = action.newData;\n\n      state.data = [...mocks2];\n      var stock = action.newData;\n\n      var data = [\n        {\n          NumReservation: stock.NumReservation,\n          DateDebutReservation: stock.DateDebutReservation,\n          DateFinReservation: stock.DateFinReservation,\n          NbJourReservation: stock.NbJourReservation,\n          ConditionReservation: stock.ConditionReservation,\n          NumClient: stock.NumClient,\n          NumReglement: stock.NumReglement\n        }\n      ]\n      console.log(data);\n      axios.post(\"http://localhost/myprojects/tropik/backend/Reservation/put/\" + action.oldData.NumReservation, data, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.data);\n\n    case FETCH_TABLE_RESERVATIONS:\n      state.data = [];\n      state.data = action.data;\n      const date = new Date();\n      const years = date.getFullYear();\n      const mounth = (\n        (parseInt(date.getMonth()) < 10)\n        ? '0'\n        : '') + date.getMonth();\n      const days = (\n        (parseInt(date.getDate()) < 10)\n        ? '0'\n        : '') + date.getDate();\n      state.dateNow = years + \"-\" + mounth + \"-\" + days\n      return Object.assign({}, state, state.dataChambres);\n\n    default:\n      return state;\n  }\n}\n\nexport default TableReservationsReducers;\n"]},"metadata":{},"sourceType":"module"}
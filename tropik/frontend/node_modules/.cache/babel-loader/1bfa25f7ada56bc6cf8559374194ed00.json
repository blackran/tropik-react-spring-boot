{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/myprojects/tropik/frontend/src/Components/Serveur/GReservation.jsx\";\nimport React, { Component } from 'react';\nimport AdminNavigation from './AdminNavigation';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\n\nclass GReservation extends Component {\n  componentDidMount() {\n    axios.get(\"http://localhost/myprojects/tropik/backend/Reservation/get\").then(res => res.data).then(state => this.props.fetchTableReservations(state)).catch(err => console.log(\"error parsing:\\n\", err));\n  }\n\n  render() {\n    const _this$props$states = this.props.states,\n          columns = _this$props$states.columns,\n          data = _this$props$states.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(AdminNavigation, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      style: {\n        width: '100%'\n      },\n      title: \"GESTION RESERVATIONS\",\n      columns: columns,\n      data: data,\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            this.props.addTableReservations(newData);\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            this.props.updateTableReservations(newData, oldData);\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            this.props.deleteTableReservations(oldData);\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    states: state.TablesReservations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTableReservations: data => {\n      dispatch({\n        type: \"ADD_TABLE_RESERVATIONS\",\n        data: data\n      });\n    },\n    deleteTableReservations: oldData => {\n      dispatch({\n        type: \"DELETE_TABLE_RESERVATIONS\",\n        oldData: oldData\n      });\n    },\n    updateTableReservations: (newData, oldData) => {\n      dispatch({\n        type: \"UPDATE_TABLE_RESERVATIONS\",\n        newData: newData,\n        oldData: oldData\n      });\n    },\n    fetchTableReservations: data => {\n      dispatch({\n        type: \"FETCH_TABLE_RESERVATIONS\",\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GReservation);","map":{"version":3,"sources":["/opt/lampp/htdocs/myprojects/tropik/frontend/src/Components/Serveur/GReservation.jsx"],"names":["React","Component","AdminNavigation","connect","MaterialTable","axios","GReservation","componentDidMount","get","then","res","data","state","props","fetchTableReservations","catch","err","console","log","render","states","columns","history","width","onRowAdd","newData","Promise","resolve","setTimeout","addTableReservations","onRowUpdate","oldData","updateTableReservations","onRowDelete","deleteTableReservations","mapStateToProps","TablesReservations","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport AdminNavigation from './AdminNavigation';\nimport {connect} from 'react-redux';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\n\nclass GReservation extends Component {\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost/myprojects/tropik/backend/Reservation/get\").then(res => res.data).then(state => this.props.fetchTableReservations(state)).catch(err => console.log(\"error parsing:\\n\", err));\n  }\n\n  render() {\n    const {columns, data} = this.props.states;\n    return (<div>\n      <AdminNavigation  history={this.props.history}/>\n      <MaterialTable style={{width: '100%'}} title=\"GESTION RESERVATIONS\" columns={columns} data={data} editable={{\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              this.props.addTableReservations(newData);\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              this.props.updateTableReservations(newData, oldData);\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              this.props.deleteTableReservations(oldData);\n            }, 600);\n          })\n        }}/>\n    </div>);\n  }\n}\n\nconst mapStateToProps = state => {\n  return {states: state.TablesReservations}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTableReservations: (data) => {\n      dispatch({type: \"ADD_TABLE_RESERVATIONS\", data: data});\n    },\n    deleteTableReservations: (oldData) => {\n      dispatch({type: \"DELETE_TABLE_RESERVATIONS\", oldData: oldData});\n    },\n    updateTableReservations: (newData, oldData) => {\n      dispatch({type: \"UPDATE_TABLE_RESERVATIONS\", newData: newData, oldData: oldData});\n    },\n    fetchTableReservations: (data) => {\n      dispatch({type: \"FETCH_TABLE_RESERVATIONS\", data: data});\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GReservation);\n"]},"metadata":{},"sourceType":"module"}
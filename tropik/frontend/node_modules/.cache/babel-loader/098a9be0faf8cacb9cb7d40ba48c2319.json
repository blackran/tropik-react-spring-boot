{"ast":null,"code":"import { ADD_AIME, FETCH_AIME } from '../actions/typesAime';\nconst initState = {\n  AIME: 0\n};\n\nconst ClientsFooter = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_AIME:\n      // axios.post(\"http://localhost/myprojects/tropik/backend/Clients/post\", std).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      const stock = state.AIME + 1;\n      state.AIME = stock;\n      return Object.assign({}, state, state.AIME);\n\n    case FETCH_AIME:\n      // state.dataClients = [];\n      // state.dataClients = [\n      //   ...action.data\n      // ];\n      return Object.assign({}, state, state.dataClients);\n\n    default:\n      return state;\n  }\n};\n\nexport default ClientsFooter;","map":{"version":3,"sources":["/opt/lampp/htdocs/myprojects/tropik/frontend/src/reducers/FooterReducers.jsx"],"names":["ADD_AIME","FETCH_AIME","initState","AIME","ClientsFooter","state","action","type","stock","Object","assign","dataClients"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,sBAAnC;AAEA,MAAMC,SAAS,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAAlB;;AAIA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA+B;AACpD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,QAAL;AACC;AACG,YAAMQ,KAAK,GAAGH,KAAK,CAACF,IAAN,GAAa,CAA3B;AACHE,MAAAA,KAAK,CAACF,IAAN,GAAaK,KAAb;AACA,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyBA,KAAK,CAACF,IAA/B,CAAP;;AAED,SAAKF,UAAL;AACC;AACC;AACA;AACA;AACA,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyBA,KAAK,CAACM,WAA/B,CAAP;;AAEF;AACC,aAAON,KAAP;AAfF;AAiBA,CAlBD;;AAoBA,eAAeD,aAAf","sourcesContent":["import {ADD_AIME, FETCH_AIME} from '../actions/typesAime';\n\nconst initState = {\n\tAIME: 0\n}\n\nconst ClientsFooter = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_AIME:\n\t\t\t// axios.post(\"http://localhost/myprojects/tropik/backend/Clients/post\", std).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      const stock = state.AIME + 1;\n\t\t\tstate.AIME = stock;\n\t\t\treturn Object.assign({}, state, state.AIME);\n\n\t\tcase FETCH_AIME:\n\t\t\t// state.dataClients = [];\n\t\t  // state.dataClients = [\n\t\t  //   ...action.data\n\t\t  // ];\n\t\t  return Object.assign({}, state, state.dataClients);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default ClientsFooter;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/opt/lampp/htdocs/myprojects/tropik/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport shortid from 'shortid';\nimport { ADD_CLIENTS, DELETE_CLIENTS, UPDATE_CLIENTS, FETCH_CLIENTS, UPDATE_ONE, ON_CHANGE_CLIENT, UPDATE_NAME_CLIENT } from '../actions/typesClients';\nconst initState = {\n  dataClients: [// {\n    // \tid:\"1\",\n    // \tidPersones:\"blackran\",\n    // \tcontentComentaire: \"je ne peux pas resoudre cette exo.\",\n    // \tidPost: \"1\"\n    // }\n  ],\n  mocksClients: '',\n  one: true,\n  submitReusit: true,\n  changes: {\n    NumClient: \"\",\n    NomClient: \"\",\n    AddressClient: \"\",\n    CpClient: \"\",\n    PaysClient: \"\",\n    TelClient: \"\",\n    EmailClient: \"\",\n    AnneeCreClient: \"\"\n  }\n};\n\nconst ClientsReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_CLIENTS:\n      state.changes[\"NumClient\"] = shortid.generate();\n      state.changes[\"AnneeCreClient\"] = new Date().getFullYear();\n      const std = [_objectSpread({}, state.changes)];\n      axios.post(\"http://localhost/myprojects/tropik/backend/Clients/post\", std, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      state.dataClients = [...state.dataClients, state.changes];\n      return Object.assign({}, state, state.Clients);\n\n    case DELETE_CLIENTS:\n      console.log(state);\n      const st = state.dataClients.filter(e => {\n        return e.NumClient !== action.id;\n      });\n      state.dataClients = [...st];\n      axios.delete(\"http://localhost/myprojects/tropik/backend/Clients/delete/\" + action.id, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.dataClients);\n\n    case UPDATE_CLIENTS:\n      const std1 = state.dataClients.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto1 = action.data;\n      state.dataClients = [...std1, ...sto1];\n      axios.put(\"http://localhost/myprojects/tropik/backend/Clients/put/\" + action.id).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.dataClients);\n\n    case FETCH_CLIENTS:\n      state.dataClients = [];\n      state.dataClients = [...action.data];\n      return Object.assign({}, state, state.dataClients);\n\n    case UPDATE_ONE:\n      state.one = action.data;\n      return Object.assign({}, state, state.one);\n\n    case ON_CHANGE_CLIENT:\n      console.log('ON_CHANGE_CLIENT');\n      state.changes[action.data.name] = action.data.value;\n      return Object.assign({}, state, state.changes);\n\n    case UPDATE_NAME_CLIENT:\n      state.changes[\"NomClient\"] = action.data;\n      return Object.assign({}, state, state.changes);\n\n    default:\n      return state;\n  }\n};\n\nexport default ClientsReducers;","map":{"version":3,"sources":["/opt/lampp/htdocs/myprojects/tropik/frontend/src/reducers/ClientsReducers.jsx"],"names":["axios","shortid","ADD_CLIENTS","DELETE_CLIENTS","UPDATE_CLIENTS","FETCH_CLIENTS","UPDATE_ONE","ON_CHANGE_CLIENT","UPDATE_NAME_CLIENT","initState","dataClients","mocksClients","one","submitReusit","changes","NumClient","NomClient","AddressClient","CpClient","PaysClient","TelClient","EmailClient","AnneeCreClient","ClientsReducers","state","action","type","generate","Date","getFullYear","std","post","headers","then","h","console","log","catch","err","Object","assign","Clients","st","filter","e","id","delete","std1","sto1","data","put","name","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport shortid from 'shortid';\nimport {ADD_CLIENTS, DELETE_CLIENTS, UPDATE_CLIENTS, FETCH_CLIENTS, UPDATE_ONE, ON_CHANGE_CLIENT, UPDATE_NAME_CLIENT} from '../actions/typesClients';\n\nconst initState = {\n\tdataClients: [\n\t\t// {\n\t\t// \tid:\"1\",\n\t\t// \tidPersones:\"blackran\",\n\t\t// \tcontentComentaire: \"je ne peux pas resoudre cette exo.\",\n\t\t// \tidPost: \"1\"\n\t\t// }\n\t],\n\tmocksClients: '',\n\tone: true,\n\tsubmitReusit: true,\n\tchanges : {\n\t\tNumClient: \"\",\n\t\tNomClient: \"\",\n\t\tAddressClient: \"\",\n\t\tCpClient: \"\",\n\t\tPaysClient: \"\",\n\t\tTelClient: \"\",\n\t\tEmailClient: \"\",\n\t\tAnneeCreClient: \"\"\n\t}\n}\n\nconst ClientsReducers = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_CLIENTS:\n\t\t\tstate.changes[\"NumClient\"] = shortid.generate();\n\t\t\tstate.changes[\"AnneeCreClient\"] = new Date().getFullYear();\n\t\t\tconst std = [{\n\t\t\t\t...state.changes\n\t\t\t}]\n\n\t\t\taxios.post(\n\t\t\t\t\"http://localhost/myprojects/tropik/backend/Clients/post\",\n\t\t\t\tstd,\n\t\t\t\t{\n            headers: {\n\t\t\t\t\t\t'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          }\n\t\t\t).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\tstate.dataClients = [\n\t\t\t\t...state.dataClients, state.changes\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.Clients);\n\n\t\tcase DELETE_CLIENTS:\n\t\t\tconsole.log(state)\n\t\t\tconst st = state.dataClients.filter(e => {\n\t\t\t\treturn e.NumClient !== action.id;\n\t\t\t});\n\t\t\tstate.dataClients = [...st];\n\t\t\taxios.delete(\"http://localhost/myprojects/tropik/backend/Clients/delete/\" + action.id,{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t}\n\t\t\t\t}).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase UPDATE_CLIENTS:\n\t\t\tconst std1 = state.dataClients.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto1 = action.data;\n\t\t\tstate.dataClients = [\n\t\t\t\t...std1,\n\t\t\t\t...sto1\n\t\t\t];\n\t\t\taxios.put(\"http://localhost/myprojects/tropik/backend/Clients/put/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase FETCH_CLIENTS:\n\t\t\tstate.dataClients = [];\n\t\t  state.dataClients = [\n\t\t    ...action.data\n\t\t  ];\n\t\t  return Object.assign({}, state, state.dataClients);\n\n\t\tcase UPDATE_ONE:\n\t\t\tstate.one = action.data;\n\t\t\treturn Object.assign({}, state, state.one);\n\n\t\tcase ON_CHANGE_CLIENT:\n\t\t\tconsole.log('ON_CHANGE_CLIENT')\n\t\t\tstate.changes[action.data.name] = action.data.value;\n\t\t\treturn Object.assign({}, state, state.changes);\n\n\t\tcase UPDATE_NAME_CLIENT:\n\t\t\tstate.changes[\"NomClient\"] = action.data;\n\t\t\treturn Object.assign({}, state, state.changes);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default ClientsReducers;\n"]},"metadata":{},"sourceType":"module"}